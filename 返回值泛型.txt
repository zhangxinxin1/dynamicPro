



   @Override
    public OpenMesDTO getDetails(Integer mesId) {
        if(mesId != null){
            String sql = "SELECT * from dyp_open_mes WHERE mes_id = ?";
            OpenMesDO openMesDO = this.orderDaoSupport.queryForObject(sql, OpenMesDO.class, mesId);
            if(openMesDO != null){
                OpenMesDTO openMesDTO = new OpenMesDTO();
                BeanUtil.copyProperties(openMesDO,openMesDTO);
                openMesDTO.setOpenTime(DateUtil.getTimeStr(openMesDO.getOpenTime()));
                return openMesDTO;
            }
        }
        return null;
    }
  <T> T queryForObject(String sql,Class<T> clazz,Object... args);
  
	@Override
	public <T> T queryForObject(String sql, Class<T> clazz, Object... args) {
		List<T> objList = this.queryForList(sql, clazz, args);
		if (objList.isEmpty()) {
			return null;
		}
		return objList.get(0);
	}





 @Override
    public List<OpenMesDTO> getMesList() {
        String sql = "SELECT * from dyp_open_mes WHERE is_del = 1";
        List<OpenMesDTO> list = this.orderDaoSupport.queryForList(sql, OpenMesDTO.class, null);
        return list;
    }
 <T> List<T> queryForList(String sql, Class<T> clazz, Object... args);
 @Override
	public <T> List<T> queryForList(String sql, Class<T> clazz, Object... args) {

		return this.jdbcTemplate.query(sql, new BeanPropertyRowMapper<T>(clazz), args);

	}
